SE_CH4_manip = SE_CH4_manip * cf,
Unit = "mg CH4 m2 d",
Manipulation = case_when(
Percent_control < 100 ~ "Drought",
Percent_control > 100 ~ "Irrigation",
TRUE ~ NA_character_))-> EK_meth
ggplot(EK_meth, aes(CH4_manip - CH4_control, Percent_control)) +
geom_point() +
geom_line() +
facet_grid(Manipulation ~ .)
ggplot(EK_meth[EK_meth$CH4_manip < 20,],
aes(CH4_manip - CH4_control, Percent_control)) +
geom_point() +
geom_line() +
facet_grid(Manipulation ~ .)
ggplot(EK_meth[EK_meth$CH4_manip < 20,],
aes(CH4_manip - CH4_control, Percent_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation)
ggplot(EK_meth[EK_meth$CH4_manip < 20,],
aes(Percent_control, CH4_manip - CH4_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation)
ggplot(EK_meth[EK_meth$CH4_manip < 20,],
aes(Percent_control, CH4_manip - CH4_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation, scales = "free")
ggplot(EK_methx,
aes(Percent_control, CH4_manip - CH4_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation, scales = "free")
ggplot(EK_meth,
aes(Percent_control, CH4_manip - CH4_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation, scales = "free")
[EK_meth$CH4_manip < 20,]
ggplot(EK_meth[EK_meth$CH4_manip < 20,],
aes(Percent_control, CH4_manip - CH4_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation, scales = "free")
ggplot(EK_meth,
aes(Percent_control, CH4_manip - CH4_control)) +
geom_point() +
geom_line() +
facet_grid(. ~ Manipulation, scales = "free")
library(dplyr)
library(ggplot2)
library(metafor)
#methane dataset gathered by Emily Kang
EK_meth <- read.csv("EK_methane.csv")
#need to convert all values to common units of mg CH4 m2 d
unique(EK_meth$Unit)
#create conversion factors
con_fac <- c("kg CH4 ha" = 0.2739726,
"ug C m2 h" = 0.03197342,
"mg CH4 m2 h" = 24,
"mg CH4 m2 d" = 1)
EK_meth %>%
mutate(cf = con_fac[Unit],
CH4_control = CH4_control * cf,
SD_CH4_control =  SD_CH4_control * cf,
SE_CH4_control = SE_CH4_control * cf,
CH4_manip = CH4_manip * cf,
SD_CH4_manip =  SD_CH4_manip * cf,
SE_CH4_manip = SE_CH4_manip * cf,
Unit = "mg CH4 m2 d",
Manipulation = case_when(
Percent_control < 100 ~ "Drought",
Percent_control > 100 ~ "Irrigation",
TRUE ~ NA_character_))-> EK_meth
library(tidyr)
#Calculate SD from SE
EK_meth %>%
replace_na(SD_CH4_control, SE_CH4_control*sqrt(N_control))
mg CH4 m2 d
replace_na(EK_meth$SD_CH4_control, EK_meth$SE_CH4_control*sqrt(EK_meth$N_control))
rlang::last_error()
#Calculate SD from SE
EK_meth %>%
mutate(SD_CH4_control = replace(., is.na(.), SE_CH4_control*sqrt(N_control)))
#Calculate SD from SE
gaps1 <- EK_meth[is.na(EK_meth$SD_CH4_control),]
EK_meth %>%
mutate(SD_CH4_control[gaps1] = SE_CH4_control[gaps1]*sqrt(N_control[gaps1])))
EK_meth %>%
mutate(SD_CH4_control[gaps1] = SE_CH4_control[gaps1]*sqrt(N_control[gaps1]))
EK_meth$SD_CH4_control[gaps1] <- EK_meth$SE_CH4_control[gaps1]*sqrt(EK_meth$N_control[gaps1])
#methane dataset gathered by Emily Kang
EK_meth <- read.csv("EK_methane.csv")
#need to convert all values to common units of mg CH4 m2 d
unique(EK_meth$Unit)
#create conversion factors
con_fac <- c("kg CH4 ha" = 0.2739726,
"ug C m2 h" = 0.03197342,
"mg CH4 m2 h" = 24,
"mg CH4 m2 d" = 1)
#convert all fluxes to mg CH4 m2 d
EK_meth %>%
mutate(cf = con_fac[Unit],
CH4_control = CH4_control * cf,
SD_CH4_control =  SD_CH4_control * cf,
SE_CH4_control = SE_CH4_control * cf,
CH4_manip = CH4_manip * cf,
SD_CH4_manip =  SD_CH4_manip * cf,
SE_CH4_manip = SE_CH4_manip * cf,
Unit = "mg CH4 m2 d",
Manipulation = case_when(
Percent_control < 100 ~ "Drought",
Percent_control > 100 ~ "Irrigation",
TRUE ~ NA_character_))-> EK_meth
#Calculate SD from SE
gaps1 <- EK_meth[is.na(EK_meth$SD_CH4_control),]
EK_meth$SD_CH4_control[gaps1] <- EK_meth$SE_CH4_control[gaps1]*sqrt(EK_meth$N_control[gaps1])
EK_meth$SD_CH4_control[gaps1,] <- EK_meth$SE_CH4_control[gaps1,]*sqrt(EK_meth$N_control[gaps1,])
EK_meth$SD_CH4_control[gaps1] <- EK_meth$SE_CH4_control*sqrt(EK_meth$N_control)
#Calculate SD from SE
gaps1 <- is.na(EK_meth$SD_CH4_control)
EK_meth$SD_CH4_control[gaps1] <- EK_meth$SE_CH4_control*sqrt(EK_meth$N_control)
EK_meth$SD_CH4_control[gaps1] <- EK_meth$SE_CH4_control[gaps1]*sqrt(EK_meth$N_control[gaps1])
View(EK_meth)
#methane dataset gathered by Emily Kang
EK_meth <- read.csv("EK_methane.csv")
#need to convert all values to common units of mg CH4 m2 d
unique(EK_meth$Unit)
#create conversion factors
con_fac <- c("kg CH4 ha" = 0.2739726,
"ug C m2 h" = 0.03197342,
"mg CH4 m2 h" = 24,
"mg CH4 m2 d" = 1)
#convert all fluxes to mg CH4 m2 d
EK_meth %>%
mutate(cf = con_fac[Unit],
CH4_control = CH4_control * cf,
SD_CH4_control =  SD_CH4_control * cf,
SE_CH4_control = SE_CH4_control * cf,
CH4_manip = CH4_manip * cf,
SD_CH4_manip =  SD_CH4_manip * cf,
SE_CH4_manip = SE_CH4_manip * cf,
Unit = "mg CH4 m2 d",
Manipulation = case_when(
Percent_control < 100 ~ "Drought",
Percent_control > 100 ~ "Irrigation",
TRUE ~ NA_character_))-> EK_meth
original <- EK_meth$SD_CH4_control
#Calculate SD from SE
gaps1 <- is.na(EK_meth$SD_CH4_control)
EK_meth$SD_CH4_control[gaps1] <- EK_meth$SE_CH4_control[gaps1]*sqrt(EK_meth$N_control[gaps1])
new <- EK_meth$SD_CH4_control
new
original
gaps2 <- is.na(EK_meth$SD_CH4_manip)
EK_meth$SD_CH4_manip[gaps2] <- EK_meth$SE_CH4_manip[gaps2]*sqrt(EK_meth$N_manip[gaps2])
View(EK_meth)
#Need SD for all rows
methdat <- escalc(
measure = "ROM",
m1i = CH4_manip, m2i = CH4_control,
sd1i = SD_CH4_manip, sd2i = SD_CH4_control,
n1i = N_manip, n2i = N_control,
data = meth_df
)
#Need SD for all rows
methdat <- escalc(
measure = "ROM",
m1i = CH4_manip, m2i = CH4_control,
sd1i = SD_CH4_manip, sd2i = SD_CH4_control,
n1i = N_manip, n2i = N_control,
data = EK_eth
)
#Need SD for all rows
methdat <- escalc(
measure = "ROM",
m1i = CH4_manip, m2i = CH4_control,
sd1i = SD_CH4_manip, sd2i = SD_CH4_control,
n1i = N_manip, n2i = N_control,
data = EK_meth
)
View(EK_meth)
View(methdat)
#Run meta analysis
meth_model <- rma.mv(yi, vi,
random = ~ 1 | X,
mods = ~ Manipulation * Ecosystem_type * Percent_control - 1,
method = "REML",
data = methdat,
slab = Ecosystem_type,
)
summary(meth_model)
#Run meta analysis
meth_model <- rma.mv(yi, vi,
random = ~ 1 | X,
mods = ~ Manipulation * Ecosystem_type + Percent_control - 1,
method = "REML",
data = methdat,
slab = Ecosystem_type,
)
summary(meth_model)
View(methdat)
#Run meta analysis
meth_model <- rma.mv(yi, vi,
random = ~ 1 | X,
mods = ~ Manipulation + Ecosystem_type + Percent_control - 1,
method = "REML",
data = methdat,
slab = Ecosystem_type,
)
summary(meth_model)
unique(methdat$Ecosystem_type)
length(unique(methdat$Ecosystem_type))
count(unique(methdat$Ecosystem_type))
View(methdat)
#Run meta analysis
meth_model <- rma.mv(yi, vi,
random = ~ 1 | X,
mods = ~ Manipulation * Ecosystem_type * Percent_control - 1,
method = "REML",
data = methdat,
slab = Ecosystem_type,
)
summary(meth_model)
profile(meth_model)
forest.rma(meth_model)
funnel(meth_model)
plot(cooks.distance(meth_model), type = "o")
methMA <- tidy(meth_model)
library(broom)
methMA <- tidy(meth_model)
methMA
library(cosore)
library(ggplot2)
library(tibble)
#load database
x <- csr_database()
#check for methane studies
unique(x$CSR_GASES)
#studies with both CO2 and CH4
x_both <- subset(x, CSR_GASES == "CO2, CH4")
unique(x_both$CSR_DATASET)
#example of data
dat <- csr_dataset("d20200328_UEYAMA_HOKUROKU")
raw_dat <- dat$data
ggplot(raw_dat, aes(CSR_SM5, CSR_FLUX_CH4)) +
geom_point() + ggtitle("Methane Flux vs Soil Moisture")
View(dat)
#only one study, same plot
dat_ch4 <- csr_dataset("d20200407_WANG")
raw_Mdat <- dat_ch4$data
ggplot(raw_Mdat, aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() + ggtitle("Methane Flux vs Soil Moisture")
#studies with only CH4
x_meth <- subset(x, CSR_GASES == "CH4")
View(x_meth)
View(raw_dat)
unique(raw_dat$CSR_PORT)
ggplot(raw_dat, aes(CSR_SM5, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~.) + ggtitle("Methane Flux vs Soil Moisture")
#example of data
dat <- csr_dataset("d20200328_UEYAMA_YAMASHIRO")
raw_dat <- dat$data
unique(raw_dat$CSR_PORT)
ggplot(raw_dat, aes(CSR_SM5, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~.) + ggtitle("Methane Flux vs Soil Moisture")
#example of data
dat <- csr_dataset("d20200328_UEYAMA_TESHIO")
raw_dat <- dat$data
unique(raw_dat$CSR_PORT)
ggplot(raw_dat, aes(CSR_SM5, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~.) + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat, aes(CSR_SM5, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
unique(raw_dat$CSR_PORT)
View(x_both)
#example of data
dat <- csr_dataset("d20200331_PEICHL")
raw_dat <- dat$data
unique(raw_dat$CSR_PORT)
ggplot(raw_dat, aes(CSR_SM5, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
View(raw_dat)
ggplot(raw_dat, aes(CSR_WTD, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
#example of data
dat <- csr_dataset("d20190610_SIHI_H2")
raw_dat <- dat$data
View(raw_dat)
unique(raw_dat$CSR_PORT)
ggplot(raw_dat, aes(CSR_WTD, CSR_SM10)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat, aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat[raw_dat$CSR_PORT == c("2",
"4",
"6",
"20".
"21",
"22",
"23"),], aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat[raw_dat$CSR_PORT == c("2",
"4",
"6",
"20",
"21",
"22",
"23"),], aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat[raw_dat$CSR_PORT == c("2",
"4",
"23"),], aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
#example of data
dat <- csr_dataset("d20190610_SIHI_H2wetland")
raw_dat <- dat$data
unique(raw_dat$CSR_PORT)
ggplot(raw_dat, aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat[raw_dat$CSR_PORT == c("10","16"),], aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
View(raw_dat)
ggplot(raw_dat[raw_dat$CSR_PORT == c("10","16"),], aes(CSR_FLUX_CO2, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
ggplot(raw_dat[raw_dat$CSR_PORT == c("4","6"),], aes(CSR_FLUX_CO2, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
#example of data
dat <- csr_dataset("d20190610_SIHI_H2")
raw_dat <- dat$data
unique(raw_dat$CSR_PORT)
ggplot(raw_dat[raw_dat$CSR_PORT == c("4","6"),], aes(CSR_FLUX_CO2, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") + ggtitle("Methane Flux vs Soil Moisture")
View(raw_dat)
range(raw_dat$CSR_FLUX_CH4)
range(raw_dat$CSR_SM10)
#example of data
dat <- csr_dataset("d20190610_SIHI_H2wetland")
raw_dat <- dat$data
range(raw_dat$CSR_SM10)
range(raw_dat$CSR_FLUX_CH4)
View(dat)
unique(x_both$CSR_DATASET)
sihi <- csr_dataset("d20190610_SIHI_H2")
tibble::glimpse(sihi)
tibble::glimpse(sihi)
unique(x_both$CSR_DATASET)
sihi_wetland <- csr_dataset("d20190610_SIHI_H2wetland")
tibble::glimpse(sihi_wetland)
unique(x_both$CSR_DATASET)
fairbanks <- csr_dataset("d20200328_UEYAMA_FAIRBANKS")
tibble::glimpse(fairbanks)
unique(x_both$CSR_DATASET)
hokuroku <- csr_dataset("d20200328_UEYAMA_HOKUROKU")
tibble::glimpse(hokuroku)
unique(x_both$CSR_DATASET)
teshio <- csr_dataset("d20200328_UEYAMA_TESHIO")
tibble::glimpse(teshio)
unique(x_both$CSR_DATASET)
yamashiro <- csr_dataset("d20200328_UEYAMA_YAMASHIRO")
tibble::glimpse(yamashiro)
#only one study that only has methane data, same plot
dat_ch4 <- csr_dataset("d20200407_WANG")
raw_Mdat <- dat_ch4$data
ggplot(raw_Mdat, aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() + ggtitle("Methane Flux vs Soil Moisture")
unique(raw_Mdat$CSR_PORT)
ggplot(raw_Mdat, aes(CSR_SM10, CSR_FLUX_CH4)) +
geom_point() +
facet_grid(CSR_PORT~., scales = "free") +
ggtitle("Methane Flux vs Soil Moisture")
tibble::glimpse(raw_Mdat)
tibble::glimpse(dat_ch4)
library(amerifluxr)
library(pander)
library(data.table)
sites <- amf_site_info()
sites_dt <- data.table::as.data.table(sites)
pander::pandoc.table(sites_dt[!is.na(DATA_START), .N, by = .(IGBP, DATA_POLICY)][order(IGBP)])
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60 &
DATA_POLICY == "CCBY4.0",
.(SITE_ID, SITE_NAME, DATA_START, DATA_END)]
data_aval <- data.table::as.data.table(amf_list_data(site_set = possible_ls$SITE_ID))
pander::pandoc.table(data_aval[c(1:10), ])
data_aval_sub <- data_aval[data_aval$BASENAME %in% c("FCH4","CH4","SWC"),
.(SITE_ID, BASENAME, Y2015, Y2016, Y2017, Y2018)]
data_aval_sub <- data_aval_sub[, lapply(.SD, mean),
by = .(SITE_ID),
.SDcols = c("Y2015", "Y2016", "Y2017", "Y2018")]
ls2 <- data_aval_sub[(Y2015 + Y2016 + Y2017 + Y2018) / 4 > 0.20]
pander::pandoc.table(ls2)
amf_plot_datayear(
site_set = ls2$SITE_ID,
var_set = c("FCH4","CH4"),
nonfilled_only = TRUE,
year_set = c(2015:2018)
)
data_aval_sub <- data_aval[data_aval$BASENAME %in% c("FCH4","SWC"),
.(SITE_ID, BASENAME, Y2015, Y2016, Y2017, Y2018)]
data_aval_sub <- data_aval_sub[, lapply(.SD, mean),
by = .(SITE_ID),
.SDcols = c("Y2015", "Y2016", "Y2017", "Y2018")]
ls2 <- data_aval_sub[(Y2015 + Y2016 + Y2017 + Y2018) / 4 > 0.20]
pander::pandoc.table(ls2)
amf_plot_datayear(
site_set = ls2$SITE_ID,
var_set = c("FCH4","CH4"),
nonfilled_only = TRUE,
year_set = c(2015:2018)
)
data_aval_sub <- data_aval[data_aval$BASENAME %in% c("FCH4","SWC"),
.(SITE_ID, BASENAME, Y2015, Y2016, Y2017, Y2018)]
data_aval_sub <- data_aval_sub[, lapply(.SD, mean),
by = .(SITE_ID),
.SDcols = c("Y2015", "Y2016", "Y2017", "Y2018")]
ls2 <- data_aval_sub[(Y2015 + Y2016 + Y2017 + Y2018) / 4 > 0.20]
pander::pandoc.table(ls2)
amf_plot_datayear(
site_set = ls2$SITE_ID,
var_set = c("FCH4","CH4"),
nonfilled_only = TRUE,
year_set = c(2015:2018)
)
amf_plot_datayear(
site_set = ls2$SITE_ID,
var_set = c("FCH4","SWC"),
nonfilled_only = TRUE,
year_set = c(2015:2018)
)
amf_plot_datayear(
site_set = ls2$SITE_ID,
var_set = c("FCH4","TAIR"),
nonfilled_only = TRUE,
year_set = c(2015:2018)
)
amf_plot_datayear(
site_set = ls2$SITE_ID,
var_set = "FCH4",
nonfilled_only = TRUE,
year_set = c(2015:2018)
)
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60 &
DATA_POLICY == c("CCBY4.0","Legacy"),
.(SITE_ID, SITE_NAME, DATA_START, DATA_END)]
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60 &
DATA_POLICY == c("CCBY4.0","LEGACY"),
.(SITE_ID, SITE_NAME, DATA_START, DATA_END)]
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60 &
.(SITE_ID, SITE_NAME, DATA_START, DATA_END)]
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60 &
.(SITE_ID, SITE_NAME, DATA_START, DATA_END)]
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60,
.(SITE_ID, SITE_NAME, DATA_START, DATA_END)]
data_aval <- data.table::as.data.table(amf_list_data(site_set = possible_ls$SITE_ID))
pander::pandoc.table(data_aval[!is.na(DATA_START), .N, by = .(IGBP, DATA_POLICY)][order(IGBP)])
possible_ls <- sites_dt[IGBP %in% c("BSV", "CSH", "CVM",
"DBF", "DNF", "EBF",
"ENF", "GRA", "MF",
"OSH","SAV","WSA") &
!is.na(DATA_START) &
LOCATION_LAT < 60,
.(SITE_ID, SITE_NAME, DATA_POLICY, DATA_START, DATA_END)]
data_aval <- data.table::as.data.table(amf_list_data(site_set = possible_ls$SITE_ID))
pander::pandoc.table(data_aval[!is.na(DATA_START), .N, by = .(IGBP, DATA_POLICY)][order(IGBP)])
